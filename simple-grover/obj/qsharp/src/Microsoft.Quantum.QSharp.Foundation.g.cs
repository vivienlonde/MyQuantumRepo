//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Arrays\",\"Name\":\"_54838010285947d6aa511878a31059d6_IndexRange\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Given an array, returns a range over the indices of that array, suitable\\rfor use in a for loop.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The following `for` loops are equivalent:\\r\\r```qsharp\\rfor (idx in IndexRange(array)) { ... }\\rfor (idx in 0 .. Length(array) - 1) { ... }\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"array\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"An array for which a range of indices should be returned.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A range over all indices of the array.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"TypeParameter\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"'TElement\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The type of elements of the array.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Arrays\\\\Enumeration.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"array\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":37}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"Range\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Given an array, returns a range over the indices of that array, suitable\",\" for use in a for loop.\",\"\",\" # Type Parameters\",\" ## 'TElement\",\" The type of elements of the array.\",\"\",\" # Input\",\" ## array\",\" An array for which a range of indices should be returned.\",\"\",\" # Output\",\" A range over all indices of the array.\",\"\",\" # Example\",\" The following `for` loops are equivalent:\",\" ```qsharp\",\" for (idx in IndexRange(array)) { ... }\",\" for (idx in 0 .. Length(array) - 1) { ... }\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Arrays\",\"Name\":\"_54838010285947d6aa511878a31059d6_IndexRange\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Arrays\\\\Enumeration.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicA\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":153,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResult\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":50}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultZeroOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":61},\"Item2\":{\"Line\":1,\"Column\":75}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultOneOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":102},\"Item2\":{\"Line\":1,\"Column\":115}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":154,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":157,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicC\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":162,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResult\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":50}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultZeroOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":61},\"Item2\":{\"Line\":1,\"Column\":75}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultOneOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":102},\"Item2\":{\"Line\":1,\"Column\":115}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicC\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":163,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicC\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":166,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":11}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicCA\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":171,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":33}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResult\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":51}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultZeroOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":62},\"Item2\":{\"Line\":1,\"Column\":76}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onResultOneOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":109},\"Item2\":{\"Line\":1,\"Column\":122}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Result\"},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":172,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":175,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":178,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":11}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyIfElseIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":181,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicA\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":192,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResults\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":58}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"resultsValues\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":71},\"Item2\":{\"Line\":1,\"Column\":84}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":97},\"Item2\":{\"Line\":1,\"Column\":106}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onNonEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":133},\"Item2\":{\"Line\":1,\"Column\":145}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":193,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":196,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicC\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":201,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":39}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResults\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":40},\"Item2\":{\"Line\":1,\"Column\":58}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"resultsValues\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":71},\"Item2\":{\"Line\":1,\"Column\":84}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":97},\"Item2\":{\"Line\":1,\"Column\":106}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onNonEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":133},\"Item2\":{\"Line\":1,\"Column\":145}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicC\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":202,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicC\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":205,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":11}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicCA\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":210,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":40}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"measurementResults\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":41},\"Item2\":{\"Line\":1,\"Column\":59}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"resultsValues\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":72},\"Item2\":{\"Line\":1,\"Column\":85}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":98},\"Item2\":{\"Line\":1,\"Column\":107}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"onNonEqualOp\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":140},\"Item2\":{\"Line\":1,\"Column\":152}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":211,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":214,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":217,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":11}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.ClassicalControl\",\"Name\":\"ApplyConditionallyIntrinsicCA\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\ClassicalControl.qs\",\"Position\":{\"Item1\":220,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":13,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used to mark user-defined types as attributes.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Core.qs\",\"Position\":{\"Item1\":14,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":18}},\"Type\":{\"Case\":\"UnitType\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UnitType\"}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used to mark user-defined types as attributes.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":18,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used to mark the entry point of an executable.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Core.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":19}},\"Type\":{\"Case\":\"UnitType\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UnitType\"}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used to mark the entry point of an executable.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Inline\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":24,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used during QIR emission to determine\\rwhen callables should be inlined, if possible.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Core.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":15}},\"Type\":{\"Case\":\"UnitType\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"UnitType\"}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used during QIR emission to determine\",\" when callables should be inlined, if possible.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Deprecated\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":35,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used to mark a type or callable as deprecated.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"NewName\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The full name of the type or callable to use instead.\\rIs set to the empty String if a type or callable has been deprecated without substitution.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Core.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":19}},\"Type\":{\"Case\":\"String\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"NewName\",\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used to mark a type or callable as deprecated.\",\"\",\" # Named Items\",\" ## NewName\",\" The full name of the type or callable to use instead.\",\" Is set to the empty String if a type or callable has been deprecated without substitution.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":22,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used to mark a unit test.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The following is a unit test that checks if `2 + 3` is `5`:\\r\\r```qsharp\\r@Test(\\\"QuantumSimulator\\\")\\rfunction AdditionIsCorrect() : Unit {\\r    EqualityFactI(2 + 3, 5, \\\"Addition did not work correctly.\\\");\\r}\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Diagnostics\\\\UnitTests.qs\",\"Position\":{\"Item1\":23,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":13}},\"Type\":{\"Case\":\"String\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"ExecutionTarget\",\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":32}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used to mark a unit test.\",\"\",\" # Input\",\" ## ExecutionTarget\",\" The name of the target to execute the test on.\",\" The name has to be either one of the known targets, or a fully qualified name.\",\" Known targets are: QuantumSimulator, ToffoliSimulator, ResourcesEstimator.\",\"\",\" # Example\",\" The following is a unit test that checks if `2 + 3` is `5`:\",\" ```qsharp\",\" @Test(\\\"QuantumSimulator\\\")\",\" function AdditionIsCorrect() : Unit {\",\"     EqualityFactI(2 + 3, 5, \\\"Addition did not work correctly.\\\");\",\" }\",\" ```\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"EnableTestingViaName\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":32,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute via which an alternative name can be defined\\rthat may be used when loading a type or callable for testing purposes.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Diagnostics\\\\UnitTests.qs\",\"Position\":{\"Item1\":33,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":29}},\"Type\":{\"Case\":\"String\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"String\"}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute via which an alternative name can be defined\",\" that may be used when loading a type or callable for testing purposes.\",\"\",\" # Input\",\" Defined name for testing purposes.\",\" The String is expected to contain a fully qualified name.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Complex\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a complex number by its real and imaginary components.\\rThe first element of the tuple is the real component, the second one - the imaginary component.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The following snippet defines the imaginary unit $0 + 1i$:\\r\\r```qsharp\\rlet imagUnit = Complex(0.0, 1.0);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Types.qs\",\"Position\":{\"Item1\":19,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":16}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Double\"},{\"Case\":\"Double\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Real\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":24}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Imag\",\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":38}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a complex number by its real and imaginary components.\",\" The first element of the tuple is the real component, the second one - the imaginary component.\",\"\",\" # Example\",\" The following snippet defines the imaginary unit $0 + 1i$:\",\" ```qsharp\",\" let imagUnit = Complex(0.0, 1.0);\",\" ```\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"AbsD\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Returns the absolute value of a double-precision floating-point number.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Math.AbsI\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Math.AbsL\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"```qsharp\\rMessage($\\\"{AbsD(3.14)}\\\");   // 3.14\\rMessage($\\\"{AbsD(-2.71)}\\\");  // 2.71\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"a\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The number whose absolute value is to be returned.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The absolute value of `a`.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"a\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":17}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Double\"},\"ReturnType\":{\"Case\":\"Double\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Returns the absolute value of a double-precision floating-point number.\",\"\",\" # Input\",\" ## a\",\" The number whose absolute value is to be returned.\",\"\",\" # Output\",\" The absolute value of `a`.\",\"\",\" # Example\",\" ```qsharp\",\" Message($\\\"{AbsD(3.14)}\\\");   // 3.14\",\" Message($\\\"{AbsD(-2.71)}\\\");  // 2.71\",\" ```\",\"\",\" # See Also\",\" - Microsoft.Quantum.Math.AbsI\",\" - Microsoft.Quantum.Math.AbsL\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"AbsD\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"PI\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents the ratio of the circumference of a circle to its diameter.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Math.E\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Constants.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":12}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Double\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Represents the ratio of the circumference of a circle to its diameter.\",\"\",\" # Ouptut\",\" A double-precision approximation of the the circumference of a circle\",\" to its diameter, $\\\\pi \\\\approx 3.14159265358979323846$.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Math.E\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"PI\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Constants.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":12}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"__QsRef0__ExtendedTruncation__\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"Internal\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":483,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":37}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"value\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":43}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Double\"},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Double\"},{\"Case\":\"Bool\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"__QsRef0__ExtendedTruncation__\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":483,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":37}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Round\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"BasicQuantumFunctionality\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Returns the nearest integer to the specified number.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Example\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"```\\rMessage($\\\"{Round(3.1)}\\\");   //  3\\rMessage($\\\"{Round(3.7)}\\\");   //  4\\rMessage($\\\"{Round(-3.1)}\\\");  // -3\\rMessage($\\\"{Round(-3.7)}\\\");  // -4\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"a\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The value to be rounded.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The nearest integer to the input.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":557,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"value\"]},\"Type\":{\"Case\":\"Double\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":16},\"Item2\":{\"Line\":1,\"Column\":21}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Double\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Returns the nearest integer to the specified number.\",\"\",\" # Input\",\" ## a\",\" The value to be rounded.\",\"\",\" # Output\",\" The nearest integer to the input.\",\"\",\" # Example\",\" ```\",\" Message($\\\"{Round(3.1)}\\\");   //  3\",\" Message($\\\"{Round(3.7)}\\\");   //  4\",\" Message($\\\"{Round(-3.1)}\\\");  // -3\",\" Message($\\\"{Round(-3.7)}\\\");  // -4\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Round\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Math\\\\Math.qs\",\"Position\":{\"Item1\":557,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Random\",\"Name\":\"ContinuousDistribution\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a univariate probability distribution over real numbers.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ComplexDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.DiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.BigDiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Random\\\\Types.qs\",\"Position\":{\"Item1\":14,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":31}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"Double\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Sample\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"Double\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":15}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a univariate probability distribution over real numbers.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Random.ComplexDistribution\",\" - Microsoft.Quantum.Random.DiscreteDistribution\",\" - Microsoft.Quantum.Random.BigDiscreteDistribution\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Random\",\"Name\":\"ComplexDistribution\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a univariate probability distribution over complex numbers.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ContinuousDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.DiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.BigDiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Random\\\\Types.qs\",\"Position\":{\"Item1\":26,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":28}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Complex\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Sample\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Math\",\"Name\":\"Complex\",\"Range\":{\"Case\":\"Null\"}}]}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":15}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a univariate probability distribution over complex numbers.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Random.ContinuousDistribution\",\" - Microsoft.Quantum.Random.DiscreteDistribution\",\" - Microsoft.Quantum.Random.BigDiscreteDistribution\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Random\",\"Name\":\"DiscreteDistribution\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a univariate probability distribution over integers.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ContinuousDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ComplexDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.BigDiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Random\\\\Types.qs\",\"Position\":{\"Item1\":37,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":29}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"Int\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Sample\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"Int\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":15}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a univariate probability distribution over integers.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Random.ContinuousDistribution\",\" - Microsoft.Quantum.Random.ComplexDistribution\",\" - Microsoft.Quantum.Random.BigDiscreteDistribution\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Random\",\"Name\":\"BigDiscreteDistribution\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Represents a univariate probability distribution over integers of\\rarbitrary size.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ContinuousDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.ComplexDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"SeeAlso\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Microsoft.Quantum.Random.DiscreteDistribution\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Random\\\\Types.qs\",\"Position\":{\"Item1\":49,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":32}},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"BigInt\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Sample\",\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"UnitType\"},\"Item2\":{\"Case\":\"BigInt\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":15}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Represents a univariate probability distribution over integers of\",\" arbitrary size.\",\"\",\" # See Also\",\" - Microsoft.Quantum.Random.ContinuousDistribution\",\" - Microsoft.Quantum.Random.ComplexDistribution\",\" - Microsoft.Quantum.Random.DiscreteDistribution\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":37,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute used to mark a callable with the runtime capabilities it\\rrequires.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"This attribute is automatically added to callables by the compiler, unless an instance of\\rthis attribute already exists on the callable. It should not be used except in rare cases\\rwhere the compiler does not infer the required capability correctly.\\r\\rBelow is the list of capability level names, in order of increasing capabilities or\\rdecreasing restrictions:\\r\\r## `\\\"BasicQuantumFunctionality\\\"`\\r\\rMeasurement results cannot be compared for equality.\\r\\r## `\\\"BasicMeasurementFeedback\\\"`\\r\\rMeasurement results can be compared for equality only in if-statement conditional\\rexpressions in operations. The block of an if-statement that depends on a result cannot\\rcontain set statements for mutable variables declared outside the block, or return\\rstatements.\\r\\r## `\\\"FullComputation\\\"`\\r\\rNo runtime restrictions. Any Q# program can be executed.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Level\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The name of the runtime capability level required by the callable.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"NamedItem\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Reason\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"A description of why the callable requires this runtime capability.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Targeting.qs\",\"Position\":{\"Item1\":38,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":27}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Level\",\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":31},\"Item2\":{\"Line\":1,\"Column\":36}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"Reason\",\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":47},\"Item2\":{\"Line\":1,\"Column\":53}}}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute used to mark a callable with the runtime capabilities it\",\" requires.\",\"\",\" # Named Items\",\" ## Level\",\" The name of the runtime capability level required by the callable.\",\"\",\" ## Reason\",\" A description of why the callable requires this runtime capability.\",\"\",\" # Remarks\",\" This attribute is automatically added to callables by the compiler, unless an instance of\",\" this attribute already exists on the callable. It should not be used except in rare cases\",\" where the compiler does not infer the required capability correctly.\",\"\",\" Below is the list of capability level names, in order of increasing capabilities or\",\" decreasing restrictions:\",\"\",\" ## `\\\"BasicQuantumFunctionality\\\"`\",\" Measurement results cannot be compared for equality.\",\"\",\" ## `\\\"BasicMeasurementFeedback\\\"`\",\" Measurement results can be compared for equality only in if-statement conditional\",\" expressions in operations. The block of an if-statement that depends on a result cannot\",\" contain set statements for mutable variables declared outside the block, or return\",\" statements.\",\"\",\" ## `\\\"FullComputation\\\"`\",\" No runtime restrictions. Any Q# program can be executed.\"]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"TargetInstruction\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"Attribute\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":13}}]}},\"Offset\":{\"Item1\":44,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Compiler-recognized attribute for usage within target-specific packages\\rto specify the name of the instruction on the target machine.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\QSharpFoundation\\\\Targeting.qs\",\"Position\":{\"Item1\":45,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":26}},\"Type\":{\"Case\":\"String\"},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Anonymous\",\"Fields\":[{\"Case\":\"String\"}]}]}]]},\"Documentation\":[\" # Summary\",\" Compiler-recognized attribute for usage within target-specific packages\",\" to specify the name of the instruction on the target machine.\"]}")]
#line hidden
namespace Microsoft.Quantum.Arrays
{
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 26, 26)]
    public partial class _54838010285947d6aa511878a31059d6_IndexRange : Function<IQArray<Qubit>, QRange>, ICallable
    {
        public _54838010285947d6aa511878a31059d6_IndexRange(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "_54838010285947d6aa511878a31059d6_IndexRange";
        String ICallable.FullName => "Microsoft.Quantum.Arrays._54838010285947d6aa511878a31059d6_IndexRange";
        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QRange> __Body__ => (__in__) =>
        {
            var array = __in__;
#line 27 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            return new QRange(0L, (array.Length - 1L));
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QRange data) => new QTuple<QRange>(data);
        public static System.Threading.Tasks.Task<QRange> Run(IOperationFactory __m__, IQArray<Qubit> array)
        {
            return __m__.Run<_54838010285947d6aa511878a31059d6_IndexRange, IQArray<Qubit>, QRange>(array);
        }
    }
}

#line hidden
namespace Microsoft.Quantum.ClassicalControl
{
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 155, 158)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Adjoint, 158, 163)]
    public partial class ApplyIfElseIntrinsicA : Adjointable<(Result,IAdjointable,IAdjointable)>, ICallable
    {
        public ApplyIfElseIntrinsicA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Result,IAdjointable,IAdjointable)>, IApplyData
        {
            public In((Result,IAdjointable,IAdjointable) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyIfElseIntrinsicA";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyIfElseIntrinsicA";
        protected ICallable<(Result,ICallable,ICallable), QVoid> ApplyIfElseIntrinsic__
        {
            get;
            set;
        }

        public override Func<(Result,IAdjointable,IAdjointable), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResult,onResultZeroOp,onResultOneOp) = __in__;
#line 156 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp, onResultOneOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Result,IAdjointable,IAdjointable), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (measurementResult,onResultZeroOp,onResultOneOp) = __in__;
#line 159 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp.Adjoint, onResultOneOp.Adjoint));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyIfElseIntrinsic__ = this.__Factory__.Get<ICallable<(Result,ICallable,ICallable), QVoid>>(typeof(ApplyIfElseIntrinsic));
        }

        public override IApplyData __DataIn__((Result,IAdjointable,IAdjointable) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Result measurementResult, IAdjointable onResultZeroOp, IAdjointable onResultOneOp)
        {
            return __m__.Run<ApplyIfElseIntrinsicA, (Result,IAdjointable,IAdjointable), QVoid>((measurementResult, onResultZeroOp, onResultOneOp));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 164, 167)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Controlled, 167, 172)]
    public partial class ApplyIfElseIntrinsicC : Controllable<(Result,IControllable,IControllable)>, ICallable
    {
        public ApplyIfElseIntrinsicC(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Result,IControllable,IControllable)>, IApplyData
        {
            public In((Result,IControllable,IControllable) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyIfElseIntrinsicC";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyIfElseIntrinsicC";
        protected ICallable<(Result,ICallable,ICallable), QVoid> ApplyIfElseIntrinsic__
        {
            get;
            set;
        }

        public override Func<(Result,IControllable,IControllable), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResult,onResultZeroOp,onResultOneOp) = __in__;
#line 165 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp, onResultOneOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Result,IControllable,IControllable)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (ctls,(measurementResult,onResultZeroOp,onResultOneOp)) = __in__;
#line 168 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onResultOneOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyIfElseIntrinsic__ = this.__Factory__.Get<ICallable<(Result,ICallable,ICallable), QVoid>>(typeof(ApplyIfElseIntrinsic));
        }

        public override IApplyData __DataIn__((Result,IControllable,IControllable) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Result measurementResult, IControllable onResultZeroOp, IControllable onResultOneOp)
        {
            return __m__.Run<ApplyIfElseIntrinsicC, (Result,IControllable,IControllable), QVoid>((measurementResult, onResultZeroOp, onResultOneOp));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 173, 176)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Adjoint, 176, 179)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Controlled, 179, 182)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.ControlledAdjoint, 182, 189)]
    public partial class ApplyIfElseIntrinsicCA : Unitary<(Result,IUnitary,IUnitary)>, ICallable
    {
        public ApplyIfElseIntrinsicCA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Result,IUnitary,IUnitary)>, IApplyData
        {
            public In((Result,IUnitary,IUnitary) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item2)?.Qubits, ((IApplyData)Data.Item3)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyIfElseIntrinsicCA";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyIfElseIntrinsicCA";
        protected ICallable<(Result,ICallable,ICallable), QVoid> ApplyIfElseIntrinsic__
        {
            get;
            set;
        }

        public override Func<(Result,IUnitary,IUnitary), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResult,onResultZeroOp,onResultOneOp) = __in__;
#line 174 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp, onResultOneOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Result,IUnitary,IUnitary), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (measurementResult,onResultZeroOp,onResultOneOp) = __in__;
#line 177 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp.Adjoint, onResultOneOp.Adjoint));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Result,IUnitary,IUnitary)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (ctls,(measurementResult,onResultZeroOp,onResultOneOp)) = __in__;
#line 180 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onResultOneOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Result,IUnitary,IUnitary)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (ctls,(measurementResult,onResultZeroOp,onResultOneOp)) = __in__;
#line 183 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyIfElseIntrinsic__.Apply((measurementResult, onResultZeroOp.Adjoint.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onResultOneOp.Adjoint.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyIfElseIntrinsic__ = this.__Factory__.Get<ICallable<(Result,ICallable,ICallable), QVoid>>(typeof(ApplyIfElseIntrinsic));
        }

        public override IApplyData __DataIn__((Result,IUnitary,IUnitary) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Result measurementResult, IUnitary onResultZeroOp, IUnitary onResultOneOp)
        {
            return __m__.Run<ApplyIfElseIntrinsicCA, (Result,IUnitary,IUnitary), QVoid>((measurementResult, onResultZeroOp, onResultOneOp));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 194, 197)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Adjoint, 197, 202)]
    public partial class ApplyConditionallyIntrinsicA : Adjointable<(IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable)>, ICallable
    {
        public ApplyConditionallyIntrinsicA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable)>, IApplyData
        {
            public In((IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item3)?.Qubits, ((IApplyData)Data.Item4)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyConditionallyIntrinsicA";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyConditionallyIntrinsicA";
        protected ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid> ApplyConditionallyIntrinsic__
        {
            get;
            set;
        }

        public override Func<(IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResults,resultsValues,onEqualOp,onNonEqualOp) = __in__;
#line 195 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (measurementResults,resultsValues,onEqualOp,onNonEqualOp) = __in__;
#line 198 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp.Adjoint, onNonEqualOp.Adjoint));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyConditionallyIntrinsic__ = this.__Factory__.Get<ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid>>(typeof(ApplyConditionallyIntrinsic));
        }

        public override IApplyData __DataIn__((IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Result> measurementResults, IQArray<Result> resultsValues, IAdjointable onEqualOp, IAdjointable onNonEqualOp)
        {
            return __m__.Run<ApplyConditionallyIntrinsicA, (IQArray<Result>,IQArray<Result>,IAdjointable,IAdjointable), QVoid>((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 203, 206)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Controlled, 206, 211)]
    public partial class ApplyConditionallyIntrinsicC : Controllable<(IQArray<Result>,IQArray<Result>,IControllable,IControllable)>, ICallable
    {
        public ApplyConditionallyIntrinsicC(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Result>,IQArray<Result>,IControllable,IControllable)>, IApplyData
        {
            public In((IQArray<Result>,IQArray<Result>,IControllable,IControllable) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item3)?.Qubits, ((IApplyData)Data.Item4)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyConditionallyIntrinsicC";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyConditionallyIntrinsicC";
        protected ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid> ApplyConditionallyIntrinsic__
        {
            get;
            set;
        }

        public override Func<(IQArray<Result>,IQArray<Result>,IControllable,IControllable), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResults,resultsValues,onEqualOp,onNonEqualOp) = __in__;
#line 204 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Result>,IQArray<Result>,IControllable,IControllable)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (ctls,(measurementResults,resultsValues,onEqualOp,onNonEqualOp)) = __in__;
#line 207 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onNonEqualOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyConditionallyIntrinsic__ = this.__Factory__.Get<ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid>>(typeof(ApplyConditionallyIntrinsic));
        }

        public override IApplyData __DataIn__((IQArray<Result>,IQArray<Result>,IControllable,IControllable) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Result> measurementResults, IQArray<Result> resultsValues, IControllable onEqualOp, IControllable onNonEqualOp)
        {
            return __m__.Run<ApplyConditionallyIntrinsicC, (IQArray<Result>,IQArray<Result>,IControllable,IControllable), QVoid>((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 212, 215)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Adjoint, 215, 218)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Controlled, 218, 221)]
    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.ControlledAdjoint, 221, 438)]
    public partial class ApplyConditionallyIntrinsicCA : Unitary<(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary)>, ICallable
    {
        public ApplyConditionallyIntrinsicCA(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary)>, IApplyData
        {
            public In((IQArray<Result>,IQArray<Result>,IUnitary,IUnitary) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item3)?.Qubits, ((IApplyData)Data.Item4)?.Qubits);
                }
            }
        }

        String ICallable.Name => "ApplyConditionallyIntrinsicCA";
        String ICallable.FullName => "Microsoft.Quantum.ClassicalControl.ApplyConditionallyIntrinsicCA";
        protected ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid> ApplyConditionallyIntrinsic__
        {
            get;
            set;
        }

        public override Func<(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary), QVoid> __Body__ => (__in__) =>
        {
            var (measurementResults,resultsValues,onEqualOp,onNonEqualOp) = __in__;
#line 213 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (measurementResults,resultsValues,onEqualOp,onNonEqualOp) = __in__;
#line 216 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp.Adjoint, onNonEqualOp.Adjoint));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (ctls,(measurementResults,resultsValues,onEqualOp,onNonEqualOp)) = __in__;
#line 219 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onNonEqualOp.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(IQArray<Result>,IQArray<Result>,IUnitary,IUnitary)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (ctls,(measurementResults,resultsValues,onEqualOp,onNonEqualOp)) = __in__;
#line 222 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            ApplyConditionallyIntrinsic__.Apply((measurementResults, resultsValues, onEqualOp.Adjoint.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg1__) => (ctls, __arg1__))), onNonEqualOp.Adjoint.Controlled.Partial(new Func<QVoid, (IQArray<Qubit>,QVoid)>((__arg2__) => (ctls, __arg2__)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.ApplyConditionallyIntrinsic__ = this.__Factory__.Get<ICallable<(IQArray<Result>,IQArray<Result>,ICallable,ICallable), QVoid>>(typeof(ApplyConditionallyIntrinsic));
        }

        public override IApplyData __DataIn__((IQArray<Result>,IQArray<Result>,IUnitary,IUnitary) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Result> measurementResults, IQArray<Result> resultsValues, IUnitary onEqualOp, IUnitary onNonEqualOp)
        {
            return __m__.Run<ApplyConditionallyIntrinsicCA, (IQArray<Result>,IQArray<Result>,IUnitary,IUnitary), QVoid>((measurementResults, resultsValues, onEqualOp, onNonEqualOp));
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Convert
{
}

#line hidden
namespace Microsoft.Quantum.Core
{
    public class Attribute : UDTBase<QVoid>, IApplyData
    {
        public Attribute() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<QVoid>())
        {
        }

        public Attribute(QVoid data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }

    public class EntryPoint : UDTBase<QVoid>, IApplyData
    {
        public EntryPoint() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<QVoid>())
        {
        }

        public EntryPoint(QVoid data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }

    public class Inline : UDTBase<QVoid>, IApplyData
    {
        public Inline() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<QVoid>())
        {
        }

        public Inline(QVoid data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }

    public class Deprecated : UDTBase<String>, IApplyData
    {
        public Deprecated() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<String>())
        {
        }

        public Deprecated(String data) : base(data)
        {
        }

        public String NewName => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Diagnostics
{
    public class Test : UDTBase<String>, IApplyData
    {
        public Test() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<String>())
        {
        }

        public Test(String data) : base(data)
        {
        }

        public String ExecutionTarget => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }

    public class EnableTestingViaName : UDTBase<String>, IApplyData
    {
        public EnableTestingViaName() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<String>())
        {
        }

        public EnableTestingViaName(String data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Environment
{
}

#line hidden
namespace Microsoft.Quantum.Intrinsic
{
}

#line hidden
namespace Microsoft.Quantum.Math
{
    public class Complex : UDTBase<(Double,Double)>, IApplyData
    {
        public Complex() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(Double,Double)>())
        {
        }

        public Complex((Double,Double) data) : base(data)
        {
        }

        public Double Real => Data.Item1;
        public Double Imag => Data.Item2;
        public Double Item1 => Data.Item1;
        public Double Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out Double item1, out Double item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 30, 31)]
    public partial class AbsD : Function<Double, Double>, ICallable
    {
        public AbsD(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "AbsD";
        String ICallable.FullName => "Microsoft.Quantum.Math.AbsD";
        public override Func<Double, Double> __Body__ => (__in__) =>
        {
            var a = __in__;
#line 31 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            return ((a < 0D) ? -(a) : a);
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__(Double data) => new QTuple<Double>(data);
        public override IApplyData __DataOut__(Double data) => new QTuple<Double>(data);
        public static System.Threading.Tasks.Task<Double> Run(IOperationFactory __m__, Double a)
        {
            return __m__.Run<AbsD, Double, Double>(a);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 33, 34)]
    public partial class PI : Function<QVoid, Double>, ICallable
    {
        public PI(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "PI";
        String ICallable.FullName => "Microsoft.Quantum.Math.PI";
        public override Func<QVoid, Double> __Body__ => (__in__) =>
        {
#line 34 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            return 3.141592653589793D;
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Double data) => new QTuple<Double>(data);
        public static System.Threading.Tasks.Task<Double> Run(IOperationFactory __m__)
        {
            return __m__.Run<PI, QVoid, Double>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 484, 558)]
    internal partial class __QsRef0__ExtendedTruncation__ : Function<Double, (Int64,Double,Boolean)>, ICallable
    {
        public __QsRef0__ExtendedTruncation__(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Double,Boolean)>, IApplyData
        {
            public Out((Int64,Double,Boolean) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "__QsRef0__ExtendedTruncation__";
        String ICallable.FullName => "Microsoft.Quantum.Math.__QsRef0__ExtendedTruncation__";
        protected ICallable<Double, Int64> Truncate__
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        public override Func<Double, (Int64,Double,Boolean)> __Body__ => (__in__) =>
        {
            var value = __in__;
#line 485 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            var truncated = Truncate__.Apply(value);
#line 486 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            return (truncated, (Microsoft__Quantum__Convert__IntAsDouble.Apply(truncated) - value), (value >= 0D));
        }

        ;
        public override void __Init__()
        {
            this.Truncate__ = this.__Factory__.Get<ICallable<Double, Int64>>(typeof(Truncate));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
        }

        public override IApplyData __DataIn__(Double data) => new QTuple<Double>(data);
        public override IApplyData __DataOut__((Int64,Double,Boolean) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Double,Boolean)> Run(IOperationFactory __m__, Double value)
        {
            return __m__.Run<__QsRef0__ExtendedTruncation__, Double, (Int64,Double,Boolean)>(value);
        }
    }

    [SourceLocation("C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll", OperationFunctor.Body, 558, -1)]
    public partial class Round : Function<Double, Int64>, ICallable
    {
        public Round(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Round";
        String ICallable.FullName => "Microsoft.Quantum.Math.Round";
        private protected ICallable<Double, (Int64,Double,Boolean)> __QsRef0__ExtendedTruncation____
        {
            get;
            set;
        }

        protected ICallable<Double, Double> AbsD__
        {
            get;
            set;
        }

        public override Func<Double, Int64> __Body__ => (__in__) =>
        {
            var value = __in__;
#line 559 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            var (truncated,remainder,isPositive) = __QsRef0__ExtendedTruncation____.Apply(value);
#line 560 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
            if ((AbsD__.Apply(remainder) <= 1E-15D))
            {
#line 561 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
                return truncated;
            }
            else
            {
#line 563 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
                var abs = AbsD__.Apply(remainder);
#line 564 "C:\\Users\\vivie\\.nuget\\packages\\microsoft.quantum.qsharp.foundation\\0.22.187631\\lib\\netstandard2.1\\Microsoft.Quantum.QSharp.Foundation.dll"
                return (truncated + ((abs <= 0.5D) ? 0L : (isPositive ? 1L : -(1L))));
            }
        }

        ;
        public override void __Init__()
        {
            this.__QsRef0__ExtendedTruncation____ = this.__Factory__.Get<ICallable<Double, (Int64,Double,Boolean)>>(typeof(__QsRef0__ExtendedTruncation__));
            this.AbsD__ = this.__Factory__.Get<ICallable<Double, Double>>(typeof(AbsD));
        }

        public override IApplyData __DataIn__(Double data) => new QTuple<Double>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Double value)
        {
            return __m__.Run<Round, Double, Int64>(value);
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Random
{
    public class ContinuousDistribution : UDTBase<ICallable>, IApplyData
    {
        public ContinuousDistribution() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public ContinuousDistribution(ICallable data) : base(data)
        {
        }

        public ICallable Sample => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class ComplexDistribution : UDTBase<ICallable>, IApplyData
    {
        public ComplexDistribution() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public ComplexDistribution(ICallable data) : base(data)
        {
        }

        public ICallable Sample => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class DiscreteDistribution : UDTBase<ICallable>, IApplyData
    {
        public DiscreteDistribution() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public DiscreteDistribution(ICallable data) : base(data)
        {
        }

        public ICallable Sample => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }

    public class BigDiscreteDistribution : UDTBase<ICallable>, IApplyData
    {
        public BigDiscreteDistribution() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<ICallable>())
        {
        }

        public BigDiscreteDistribution(ICallable data) : base(data)
        {
        }

        public ICallable Sample => Data;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
        {
            get
            {
                return ((IApplyData)Data)?.Qubits;
            }
        }

        public void Deconstruct()
        {
        }
    }
}

#line hidden
namespace Microsoft.Quantum.Targeting
{
    public class RequiresCapability : UDTBase<(String,String)>, IApplyData
    {
        public RequiresCapability() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<(String,String)>())
        {
        }

        public RequiresCapability((String,String) data) : base(data)
        {
        }

        public String Level => Data.Item1;
        public String Reason => Data.Item2;
        public String Item1 => Data.Item1;
        public String Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out String item1, out String item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    public class TargetInstruction : UDTBase<String>, IApplyData
    {
        public TargetInstruction() : base(global::Microsoft.Quantum.Simulation.Core.Default.OfType<String>())
        {
        }

        public TargetInstruction(String data) : base(data)
        {
        }

        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct()
        {
        }
    }
}